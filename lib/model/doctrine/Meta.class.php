<?php

/**
 * Meta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    cdfeg12
 * @subpackage model
 * @author     Tesis CDFE
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Meta extends BaseMeta {

    static public $estados = array('activa' => 1, 'completada' => 2, 'expirada' => 3);
    
    public function __toString() {
        return $this->getTitulo();
    }
    
    /**
     * Retorno de lista de estados
     * @return type 
     */
    public function getEstados() {
        return self::$estados;
    }

    /**
     * obrecarga del método guardar para definir el estado por defecto y el usuario
     * @param type $usuario
     * @param Doctrine_Connection $conn 
     */
    public function save(Doctrine_Connection $conn = null) {
        $this->setEstado(1);
        parent::save($conn);
    }

    /**
     * Define una meta como completada
     * @return type 
     */
    public function completarMeta() {
        $this->setEstado($this->estados['completada']);
        parent::save();
        return 'ok';
    }

    /**
     * Obtiene el nombre de la imagen para definir la alerta de vencimiento de la meta basado en la fecha
     * @param Fecha $fecha_cumplir La fecha en la que se tiene o tuvo que cumplir la meta
     * @return string Nombre de la imagen adecuada para la alerta
     */
    public function getNombreImgAlerta($fecha_cumplir) {
        $nombre_imagen = "green_alert.png";
        $hoy_anyo = date('Y');
        $hoy_mes = date('m');
        $hoy_dia = date('d');

        $fecha_cumplir = explode('-', $fecha_cumplir);
        $cumple_anyo = $fecha_cumplir[0];
        $cumple_mes = $fecha_cumplir[1];
        $cumple_dia = explode(' ', $fecha_cumplir[2]);
        $cumple_dia = $cumple_dia[0];

        //calculo timestam de las dos fechas 
        $timestamp1 = mktime(0, 0, 0, $cumple_mes, $cumple_dia, $cumple_anyo);
        $timestamp2 = mktime(4, 12, 0, $hoy_mes, $hoy_dia, $hoy_anyo);

        //resto a una fecha la otra 
        $segundos_diferencia = $timestamp1 - $timestamp2;
//convierto segundos en dÃ­as 
        $dias_diferencia = $segundos_diferencia / (60 * 60 * 24);

        if ($dias_diferencia <= 0 && $this->getEstado() != 2) {
            $this->setEstado($this->estados['expirada']);
            $this->save();
        }

        if ($dias_diferencia <= 10) {
            $nombre_imagen = "red_alert.png";
        } elseif ($dias_diferencia <= 30) {
            $nombre_imagen = "yellow_alert.png";
        } else {
            $nombre_imagen = "green_alert.png";
        }
        return $nombre_imagen;
    }

}